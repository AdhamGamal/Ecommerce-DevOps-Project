# Define an upstream block for backend servers.
upstream backend {
    ${BACKEND_SERVERS}
}

server {
    listen 80;                              # This server block listens on port 80 (HTTP).
    root /usr/share/nginx/html;             # Root directory for serving React static files.
    index index.html;                       # Default file served when a directory is requested.
    proxy_intercept_errors on;              # Handle errors in this block.

    # Custom error pages using internal directive
    error_page 400 /error-pages/400.html;
    location = /error-pages/400.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 401 /error-pages/401.html;
    location = /error-pages/401.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 403 /error-pages/403.html;
    location = /error-pages/403.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 404 /error-pages/404.html;
    location = /error-pages/404.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 405 /error-pages/405.html;
    location = /error-pages/405.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 500 /error-pages/500.html;
    location = /error-pages/500.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 502 /error-pages/502.html;
    location = /error-pages/502.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 503 /error-pages/503.html;
    location = /error-pages/503.html {
        root /usr/share/nginx/html;
        internal;
    }

    error_page 504 /error-pages/504.html;
    location = /error-pages/504.html {
        root /usr/share/nginx/html;
        internal;
    }


    # Serve static files (images, JS, CSS, etc.) from /static directory.
    location /static/ {
        try_files $uri $uri/ =404;          # If file not found, return a 404 error.
    }

    # Proxy API requests to the backend servers.
    location /api/ {
        proxy_pass http://backend;          # Forward API calls to the 'backend' upstream.

        # Forward original request headers.
        proxy_set_header Host $host;                                    # Preserve the original Host header.
        proxy_set_header X-Real-IP $remote_addr;                        # Client IP.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;    # Forward chain of proxies.
        proxy_set_header X-Forwarded-Proto $scheme;                     # Original protocol (HTTP/HTTPS).

        proxy_connect_timeout 5s;           # Timeout for connecting to backend.
        proxy_read_timeout 10s;             # Timeout for reading from backend.

        # Strip out the `/api` prefix before passing to the backend.
        rewrite ^/api/(.*) /$1 break;
    }

    # Fallback to React's index.html for client-side routing.
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Cache static assets (JS, CSS, images, fonts, etc.) for better performance.
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|otf|eot)$ {
        expires 1y;                                             # Cache for one year.
        add_header Cache-Control "public, max-age=31536000";    # Cache-control header.
    }
}
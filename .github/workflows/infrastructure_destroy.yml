name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "destroy" to confirm'
        required: true
        default: 'cancel'
        
env:
  TF_WORKING_DIR: 'Devops/terraform'

jobs:
  destroy:
    if: github.event.inputs.confirm_destroy == 'destroy'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Terraform Init
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform init

    - name: Terraform Plan Destroy
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform plan -destroy -input=false -var="aws_region=${{ vars.AWS_REGION }}"

    - name: Terraform Destroy
      working-directory: ${{ env.TF_WORKING_DIR }}
      run: terraform destroy -auto-approve -var="aws_region=${{ vars.AWS_REGION }}"
      env:
        TF_VAR_aws_region: ${{ vars.AWS_REGION }}
        TF_VAR_backend_instance_count: ${{ vars.BACKEND_INSTANCE_COUNT || 2 }}
        TF_VAR_ssh_access_cidr: ${{ vars.SSH_ACCESS_CIDR || '0.0.0.0/0' }}
        TF_VAR_backend_port: ${{ vars.BACKEND_PORT || 8000 }}

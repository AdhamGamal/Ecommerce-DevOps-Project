name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "destroy" to confirm'
        required: true
        default: 'cancel'
jobs:
  destroy:
    runs-on: ubuntu-latest
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Destroy Instances
      run: |
        # Terminate all instances with Elegance-* name tag
        aws ec2 describe-instances \
          --filters "Name=tag:Name,Values=Elegance-*" \
          --query "Reservations[].Instances[].InstanceId" \
          --output text | xargs -r aws ec2 terminate-instances --instance-ids

    - name: Destroy VPC
      run: |
        # Delete VPC and its dependencies
        VPC_ID=$(aws ec2 describe-vpcs --filters "Name=tag:Name,Values=Elegance-VPC" --query "Vpcs[0].VpcId" --output text)
        
        # Delete IGW
        IGW_ID=$(aws ec2 describe-internet-gateways --filters "Name=attachment.vpc-id,Values=$VPC_ID" --query "InternetGateways[0].InternetGatewayId" --output text)
        aws ec2 detach-internet-gateway --internet-gateway-id $IGW_ID --vpc-id $VPC_ID
        aws ec2 delete-internet-gateway --internet-gateway-id $IGW_ID
        
        # Delete subnets
        aws ec2 describe-subnets --filters "Name=vpc-id,Values=$VPC_ID" \
          --query "Subnets[].SubnetId" --output text | xargs -r aws ec2 delete-subnet --subnet-id
        
        # Delete VPC
        aws ec2 delete-vpc --vpc-id $VPC_ID